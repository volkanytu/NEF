//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace NEF.ConsoleApp.SendCampaignActivitySms.com.euromsg.Report.live {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ReportSoap", Namespace="http://ws.euromsg.com/report")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(EmPushMessage[]))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(object[]))]
    public partial class Report : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetListContentOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCampaignReportWithCampIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCampaignReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEmailCampaignLinksOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEmailCampaignDeliveryStatusReportViaFtpOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEmailCampaignDeliveryStatusReportBetweenTwoDatesViaFtpOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEmailCampaignMemberLinkReportViaFtpOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEmailCampaignMemberLinkReportBetweenTwoDatesViaFtpOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEmailUnsubscribeReportViaFtpOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEmailUnsubscribeReportBetweenTwoDatesViaFtpOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUnsubscribeReportBetweenTwoDatesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSmsOptoutReportBetweenTwoDatesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFilteredMembersOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryBulkFileProgressOperationCompleted;
        
        private System.Threading.SendOrPostCallback RetryExportJobOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryOngoingEmailStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryOngoingSmsStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetIncomingSmsMessagesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSmsCampaignReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSmsCampaignReportWithCampIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSmsCampaignDeliveryStatusReportViaFtpOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSmsCampaignDeliveryStatusReportBetweenTwoDatesViaFtpOperationCompleted;
        
        private System.Threading.SendOrPostCallback QuerySendingPushMessageToMembersOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryDataWarehouseUploadProgressOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Report() {
            this.Url = global::NEF.ConsoleApp.SendCampaignActivitySms.Properties.Settings.Default.Nef_ConsoleApp_SendCampaignActivitySms_com_euromsg_Report_live_Report;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetListContentCompletedEventHandler GetListContentCompleted;
        
        /// <remarks/>
        public event GetCampaignReportWithCampIDCompletedEventHandler GetCampaignReportWithCampIDCompleted;
        
        /// <remarks/>
        public event GetCampaignReportCompletedEventHandler GetCampaignReportCompleted;
        
        /// <remarks/>
        public event GetEmailCampaignLinksCompletedEventHandler GetEmailCampaignLinksCompleted;
        
        /// <remarks/>
        public event GetEmailCampaignDeliveryStatusReportViaFtpCompletedEventHandler GetEmailCampaignDeliveryStatusReportViaFtpCompleted;
        
        /// <remarks/>
        public event GetEmailCampaignDeliveryStatusReportBetweenTwoDatesViaFtpCompletedEventHandler GetEmailCampaignDeliveryStatusReportBetweenTwoDatesViaFtpCompleted;
        
        /// <remarks/>
        public event GetEmailCampaignMemberLinkReportViaFtpCompletedEventHandler GetEmailCampaignMemberLinkReportViaFtpCompleted;
        
        /// <remarks/>
        public event GetEmailCampaignMemberLinkReportBetweenTwoDatesViaFtpCompletedEventHandler GetEmailCampaignMemberLinkReportBetweenTwoDatesViaFtpCompleted;
        
        /// <remarks/>
        public event GetEmailUnsubscribeReportViaFtpCompletedEventHandler GetEmailUnsubscribeReportViaFtpCompleted;
        
        /// <remarks/>
        public event GetEmailUnsubscribeReportBetweenTwoDatesViaFtpCompletedEventHandler GetEmailUnsubscribeReportBetweenTwoDatesViaFtpCompleted;
        
        /// <remarks/>
        public event GetUnsubscribeReportBetweenTwoDatesCompletedEventHandler GetUnsubscribeReportBetweenTwoDatesCompleted;
        
        /// <remarks/>
        public event GetSmsOptoutReportBetweenTwoDatesCompletedEventHandler GetSmsOptoutReportBetweenTwoDatesCompleted;
        
        /// <remarks/>
        public event GetFilteredMembersCompletedEventHandler GetFilteredMembersCompleted;
        
        /// <remarks/>
        public event QueryBulkFileProgressCompletedEventHandler QueryBulkFileProgressCompleted;
        
        /// <remarks/>
        public event RetryExportJobCompletedEventHandler RetryExportJobCompleted;
        
        /// <remarks/>
        public event QueryOngoingEmailStatusCompletedEventHandler QueryOngoingEmailStatusCompleted;
        
        /// <remarks/>
        public event QueryOngoingSmsStatusCompletedEventHandler QueryOngoingSmsStatusCompleted;
        
        /// <remarks/>
        public event GetIncomingSmsMessagesCompletedEventHandler GetIncomingSmsMessagesCompleted;
        
        /// <remarks/>
        public event GetSmsCampaignReportCompletedEventHandler GetSmsCampaignReportCompleted;
        
        /// <remarks/>
        public event GetSmsCampaignReportWithCampIDCompletedEventHandler GetSmsCampaignReportWithCampIDCompleted;
        
        /// <remarks/>
        public event GetSmsCampaignDeliveryStatusReportViaFtpCompletedEventHandler GetSmsCampaignDeliveryStatusReportViaFtpCompleted;
        
        /// <remarks/>
        public event GetSmsCampaignDeliveryStatusReportBetweenTwoDatesViaFtpCompletedEventHandler GetSmsCampaignDeliveryStatusReportBetweenTwoDatesViaFtpCompleted;
        
        /// <remarks/>
        public event QuerySendingPushMessageToMembersCompletedEventHandler QuerySendingPushMessageToMembersCompleted;
        
        /// <remarks/>
        public event QueryDataWarehouseUploadProgressCompletedEventHandler QueryDataWarehouseUploadProgressCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.euromsg.com/report/GetListContent", RequestNamespace="http://ws.euromsg.com/report", ResponseNamespace="http://ws.euromsg.com/report", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmReportResult GetListContent(string ServiceTicket, string GroupName, string ListName, string ListInsertionBeginDate, string ListInsertionFinishDate, string Map, string ZipPassword, string NotificationEmail, FtpInfo FtpDetails) {
            object[] results = this.Invoke("GetListContent", new object[] {
                        ServiceTicket,
                        GroupName,
                        ListName,
                        ListInsertionBeginDate,
                        ListInsertionFinishDate,
                        Map,
                        ZipPassword,
                        NotificationEmail,
                        FtpDetails});
            return ((EmReportResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetListContentAsync(string ServiceTicket, string GroupName, string ListName, string ListInsertionBeginDate, string ListInsertionFinishDate, string Map, string ZipPassword, string NotificationEmail, FtpInfo FtpDetails) {
            this.GetListContentAsync(ServiceTicket, GroupName, ListName, ListInsertionBeginDate, ListInsertionFinishDate, Map, ZipPassword, NotificationEmail, FtpDetails, null);
        }
        
        /// <remarks/>
        public void GetListContentAsync(string ServiceTicket, string GroupName, string ListName, string ListInsertionBeginDate, string ListInsertionFinishDate, string Map, string ZipPassword, string NotificationEmail, FtpInfo FtpDetails, object userState) {
            if ((this.GetListContentOperationCompleted == null)) {
                this.GetListContentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetListContentOperationCompleted);
            }
            this.InvokeAsync("GetListContent", new object[] {
                        ServiceTicket,
                        GroupName,
                        ListName,
                        ListInsertionBeginDate,
                        ListInsertionFinishDate,
                        Map,
                        ZipPassword,
                        NotificationEmail,
                        FtpDetails}, this.GetListContentOperationCompleted, userState);
        }
        
        private void OnGetListContentOperationCompleted(object arg) {
            if ((this.GetListContentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetListContentCompleted(this, new GetListContentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.euromsg.com/report/GetCampaignReportWithCampID", RequestNamespace="http://ws.euromsg.com/report", ResponseNamespace="http://ws.euromsg.com/report", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmReportResult GetCampaignReportWithCampID(string ServiceTicket, string CampID, out EmCampaignReportResult Campaign) {
            object[] results = this.Invoke("GetCampaignReportWithCampID", new object[] {
                        ServiceTicket,
                        CampID});
            Campaign = ((EmCampaignReportResult)(results[1]));
            return ((EmReportResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetCampaignReportWithCampIDAsync(string ServiceTicket, string CampID) {
            this.GetCampaignReportWithCampIDAsync(ServiceTicket, CampID, null);
        }
        
        /// <remarks/>
        public void GetCampaignReportWithCampIDAsync(string ServiceTicket, string CampID, object userState) {
            if ((this.GetCampaignReportWithCampIDOperationCompleted == null)) {
                this.GetCampaignReportWithCampIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCampaignReportWithCampIDOperationCompleted);
            }
            this.InvokeAsync("GetCampaignReportWithCampID", new object[] {
                        ServiceTicket,
                        CampID}, this.GetCampaignReportWithCampIDOperationCompleted, userState);
        }
        
        private void OnGetCampaignReportWithCampIDOperationCompleted(object arg) {
            if ((this.GetCampaignReportWithCampIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCampaignReportWithCampIDCompleted(this, new GetCampaignReportWithCampIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.euromsg.com/report/GetCampaignReport", RequestNamespace="http://ws.euromsg.com/report", ResponseNamespace="http://ws.euromsg.com/report", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmReportResult GetCampaignReport(string ServiceTicket, string BeginDate, string EndDate, out EmCampaignReportResult[] Campaigns) {
            object[] results = this.Invoke("GetCampaignReport", new object[] {
                        ServiceTicket,
                        BeginDate,
                        EndDate});
            Campaigns = ((EmCampaignReportResult[])(results[1]));
            return ((EmReportResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetCampaignReportAsync(string ServiceTicket, string BeginDate, string EndDate) {
            this.GetCampaignReportAsync(ServiceTicket, BeginDate, EndDate, null);
        }
        
        /// <remarks/>
        public void GetCampaignReportAsync(string ServiceTicket, string BeginDate, string EndDate, object userState) {
            if ((this.GetCampaignReportOperationCompleted == null)) {
                this.GetCampaignReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCampaignReportOperationCompleted);
            }
            this.InvokeAsync("GetCampaignReport", new object[] {
                        ServiceTicket,
                        BeginDate,
                        EndDate}, this.GetCampaignReportOperationCompleted, userState);
        }
        
        private void OnGetCampaignReportOperationCompleted(object arg) {
            if ((this.GetCampaignReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCampaignReportCompleted(this, new GetCampaignReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.euromsg.com/report/GetEmailCampaignLinks", RequestNamespace="http://ws.euromsg.com/report", ResponseNamespace="http://ws.euromsg.com/report", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmReportResult GetEmailCampaignLinks(string ServiceTicket, string CampaignID, out CampaignLink[] Links) {
            object[] results = this.Invoke("GetEmailCampaignLinks", new object[] {
                        ServiceTicket,
                        CampaignID});
            Links = ((CampaignLink[])(results[1]));
            return ((EmReportResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetEmailCampaignLinksAsync(string ServiceTicket, string CampaignID) {
            this.GetEmailCampaignLinksAsync(ServiceTicket, CampaignID, null);
        }
        
        /// <remarks/>
        public void GetEmailCampaignLinksAsync(string ServiceTicket, string CampaignID, object userState) {
            if ((this.GetEmailCampaignLinksOperationCompleted == null)) {
                this.GetEmailCampaignLinksOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEmailCampaignLinksOperationCompleted);
            }
            this.InvokeAsync("GetEmailCampaignLinks", new object[] {
                        ServiceTicket,
                        CampaignID}, this.GetEmailCampaignLinksOperationCompleted, userState);
        }
        
        private void OnGetEmailCampaignLinksOperationCompleted(object arg) {
            if ((this.GetEmailCampaignLinksCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEmailCampaignLinksCompleted(this, new GetEmailCampaignLinksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.euromsg.com/report/GetEmailCampaignDeliveryStatusReportViaFtp", RequestNamespace="http://ws.euromsg.com/report", ResponseNamespace="http://ws.euromsg.com/report", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmReportResult GetEmailCampaignDeliveryStatusReportViaFtp(string ServiceTicket, string CampaignID, string Map, string ZipPassword, string NotificationEmail, FtpInfo FtpDetails) {
            object[] results = this.Invoke("GetEmailCampaignDeliveryStatusReportViaFtp", new object[] {
                        ServiceTicket,
                        CampaignID,
                        Map,
                        ZipPassword,
                        NotificationEmail,
                        FtpDetails});
            return ((EmReportResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetEmailCampaignDeliveryStatusReportViaFtpAsync(string ServiceTicket, string CampaignID, string Map, string ZipPassword, string NotificationEmail, FtpInfo FtpDetails) {
            this.GetEmailCampaignDeliveryStatusReportViaFtpAsync(ServiceTicket, CampaignID, Map, ZipPassword, NotificationEmail, FtpDetails, null);
        }
        
        /// <remarks/>
        public void GetEmailCampaignDeliveryStatusReportViaFtpAsync(string ServiceTicket, string CampaignID, string Map, string ZipPassword, string NotificationEmail, FtpInfo FtpDetails, object userState) {
            if ((this.GetEmailCampaignDeliveryStatusReportViaFtpOperationCompleted == null)) {
                this.GetEmailCampaignDeliveryStatusReportViaFtpOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEmailCampaignDeliveryStatusReportViaFtpOperationCompleted);
            }
            this.InvokeAsync("GetEmailCampaignDeliveryStatusReportViaFtp", new object[] {
                        ServiceTicket,
                        CampaignID,
                        Map,
                        ZipPassword,
                        NotificationEmail,
                        FtpDetails}, this.GetEmailCampaignDeliveryStatusReportViaFtpOperationCompleted, userState);
        }
        
        private void OnGetEmailCampaignDeliveryStatusReportViaFtpOperationCompleted(object arg) {
            if ((this.GetEmailCampaignDeliveryStatusReportViaFtpCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEmailCampaignDeliveryStatusReportViaFtpCompleted(this, new GetEmailCampaignDeliveryStatusReportViaFtpCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.euromsg.com/report/GetEmailCampaignDeliveryStatusReportBetweenTwoDatesV" +
            "iaFtp", RequestNamespace="http://ws.euromsg.com/report", ResponseNamespace="http://ws.euromsg.com/report", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmReportResult GetEmailCampaignDeliveryStatusReportBetweenTwoDatesViaFtp(string ServiceTicket, string CampaignID, string Map, string ZipPassword, string NotificationEmail, string BeginDate, string EndDate, FtpInfo FtpDetails) {
            object[] results = this.Invoke("GetEmailCampaignDeliveryStatusReportBetweenTwoDatesViaFtp", new object[] {
                        ServiceTicket,
                        CampaignID,
                        Map,
                        ZipPassword,
                        NotificationEmail,
                        BeginDate,
                        EndDate,
                        FtpDetails});
            return ((EmReportResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetEmailCampaignDeliveryStatusReportBetweenTwoDatesViaFtpAsync(string ServiceTicket, string CampaignID, string Map, string ZipPassword, string NotificationEmail, string BeginDate, string EndDate, FtpInfo FtpDetails) {
            this.GetEmailCampaignDeliveryStatusReportBetweenTwoDatesViaFtpAsync(ServiceTicket, CampaignID, Map, ZipPassword, NotificationEmail, BeginDate, EndDate, FtpDetails, null);
        }
        
        /// <remarks/>
        public void GetEmailCampaignDeliveryStatusReportBetweenTwoDatesViaFtpAsync(string ServiceTicket, string CampaignID, string Map, string ZipPassword, string NotificationEmail, string BeginDate, string EndDate, FtpInfo FtpDetails, object userState) {
            if ((this.GetEmailCampaignDeliveryStatusReportBetweenTwoDatesViaFtpOperationCompleted == null)) {
                this.GetEmailCampaignDeliveryStatusReportBetweenTwoDatesViaFtpOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEmailCampaignDeliveryStatusReportBetweenTwoDatesViaFtpOperationCompleted);
            }
            this.InvokeAsync("GetEmailCampaignDeliveryStatusReportBetweenTwoDatesViaFtp", new object[] {
                        ServiceTicket,
                        CampaignID,
                        Map,
                        ZipPassword,
                        NotificationEmail,
                        BeginDate,
                        EndDate,
                        FtpDetails}, this.GetEmailCampaignDeliveryStatusReportBetweenTwoDatesViaFtpOperationCompleted, userState);
        }
        
        private void OnGetEmailCampaignDeliveryStatusReportBetweenTwoDatesViaFtpOperationCompleted(object arg) {
            if ((this.GetEmailCampaignDeliveryStatusReportBetweenTwoDatesViaFtpCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEmailCampaignDeliveryStatusReportBetweenTwoDatesViaFtpCompleted(this, new GetEmailCampaignDeliveryStatusReportBetweenTwoDatesViaFtpCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.euromsg.com/report/GetEmailCampaignMemberLinkReportViaFtp", RequestNamespace="http://ws.euromsg.com/report", ResponseNamespace="http://ws.euromsg.com/report", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmReportResult GetEmailCampaignMemberLinkReportViaFtp(string ServiceTicket, string CampaignID, string Map, string ZipPassword, string NotificationEmail, FtpInfo FtpDetails) {
            object[] results = this.Invoke("GetEmailCampaignMemberLinkReportViaFtp", new object[] {
                        ServiceTicket,
                        CampaignID,
                        Map,
                        ZipPassword,
                        NotificationEmail,
                        FtpDetails});
            return ((EmReportResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetEmailCampaignMemberLinkReportViaFtpAsync(string ServiceTicket, string CampaignID, string Map, string ZipPassword, string NotificationEmail, FtpInfo FtpDetails) {
            this.GetEmailCampaignMemberLinkReportViaFtpAsync(ServiceTicket, CampaignID, Map, ZipPassword, NotificationEmail, FtpDetails, null);
        }
        
        /// <remarks/>
        public void GetEmailCampaignMemberLinkReportViaFtpAsync(string ServiceTicket, string CampaignID, string Map, string ZipPassword, string NotificationEmail, FtpInfo FtpDetails, object userState) {
            if ((this.GetEmailCampaignMemberLinkReportViaFtpOperationCompleted == null)) {
                this.GetEmailCampaignMemberLinkReportViaFtpOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEmailCampaignMemberLinkReportViaFtpOperationCompleted);
            }
            this.InvokeAsync("GetEmailCampaignMemberLinkReportViaFtp", new object[] {
                        ServiceTicket,
                        CampaignID,
                        Map,
                        ZipPassword,
                        NotificationEmail,
                        FtpDetails}, this.GetEmailCampaignMemberLinkReportViaFtpOperationCompleted, userState);
        }
        
        private void OnGetEmailCampaignMemberLinkReportViaFtpOperationCompleted(object arg) {
            if ((this.GetEmailCampaignMemberLinkReportViaFtpCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEmailCampaignMemberLinkReportViaFtpCompleted(this, new GetEmailCampaignMemberLinkReportViaFtpCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.euromsg.com/report/GetEmailCampaignMemberLinkReportBetweenTwoDatesViaFt" +
            "p", RequestNamespace="http://ws.euromsg.com/report", ResponseNamespace="http://ws.euromsg.com/report", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmReportResult GetEmailCampaignMemberLinkReportBetweenTwoDatesViaFtp(string ServiceTicket, string CampaignID, string Map, string ZipPassword, string NotificationEmail, string BeginDate, string EndDate, FtpInfo FtpDetails) {
            object[] results = this.Invoke("GetEmailCampaignMemberLinkReportBetweenTwoDatesViaFtp", new object[] {
                        ServiceTicket,
                        CampaignID,
                        Map,
                        ZipPassword,
                        NotificationEmail,
                        BeginDate,
                        EndDate,
                        FtpDetails});
            return ((EmReportResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetEmailCampaignMemberLinkReportBetweenTwoDatesViaFtpAsync(string ServiceTicket, string CampaignID, string Map, string ZipPassword, string NotificationEmail, string BeginDate, string EndDate, FtpInfo FtpDetails) {
            this.GetEmailCampaignMemberLinkReportBetweenTwoDatesViaFtpAsync(ServiceTicket, CampaignID, Map, ZipPassword, NotificationEmail, BeginDate, EndDate, FtpDetails, null);
        }
        
        /// <remarks/>
        public void GetEmailCampaignMemberLinkReportBetweenTwoDatesViaFtpAsync(string ServiceTicket, string CampaignID, string Map, string ZipPassword, string NotificationEmail, string BeginDate, string EndDate, FtpInfo FtpDetails, object userState) {
            if ((this.GetEmailCampaignMemberLinkReportBetweenTwoDatesViaFtpOperationCompleted == null)) {
                this.GetEmailCampaignMemberLinkReportBetweenTwoDatesViaFtpOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEmailCampaignMemberLinkReportBetweenTwoDatesViaFtpOperationCompleted);
            }
            this.InvokeAsync("GetEmailCampaignMemberLinkReportBetweenTwoDatesViaFtp", new object[] {
                        ServiceTicket,
                        CampaignID,
                        Map,
                        ZipPassword,
                        NotificationEmail,
                        BeginDate,
                        EndDate,
                        FtpDetails}, this.GetEmailCampaignMemberLinkReportBetweenTwoDatesViaFtpOperationCompleted, userState);
        }
        
        private void OnGetEmailCampaignMemberLinkReportBetweenTwoDatesViaFtpOperationCompleted(object arg) {
            if ((this.GetEmailCampaignMemberLinkReportBetweenTwoDatesViaFtpCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEmailCampaignMemberLinkReportBetweenTwoDatesViaFtpCompleted(this, new GetEmailCampaignMemberLinkReportBetweenTwoDatesViaFtpCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.euromsg.com/report/GetEmailUnsubscribeReportViaFtp", RequestNamespace="http://ws.euromsg.com/report", ResponseNamespace="http://ws.euromsg.com/report", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmReportResult GetEmailUnsubscribeReportViaFtp(string ServiceTicket, string CampaignID, string Map, string ZipPassword, string NotificationEmail, FtpInfo FtpDetails) {
            object[] results = this.Invoke("GetEmailUnsubscribeReportViaFtp", new object[] {
                        ServiceTicket,
                        CampaignID,
                        Map,
                        ZipPassword,
                        NotificationEmail,
                        FtpDetails});
            return ((EmReportResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetEmailUnsubscribeReportViaFtpAsync(string ServiceTicket, string CampaignID, string Map, string ZipPassword, string NotificationEmail, FtpInfo FtpDetails) {
            this.GetEmailUnsubscribeReportViaFtpAsync(ServiceTicket, CampaignID, Map, ZipPassword, NotificationEmail, FtpDetails, null);
        }
        
        /// <remarks/>
        public void GetEmailUnsubscribeReportViaFtpAsync(string ServiceTicket, string CampaignID, string Map, string ZipPassword, string NotificationEmail, FtpInfo FtpDetails, object userState) {
            if ((this.GetEmailUnsubscribeReportViaFtpOperationCompleted == null)) {
                this.GetEmailUnsubscribeReportViaFtpOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEmailUnsubscribeReportViaFtpOperationCompleted);
            }
            this.InvokeAsync("GetEmailUnsubscribeReportViaFtp", new object[] {
                        ServiceTicket,
                        CampaignID,
                        Map,
                        ZipPassword,
                        NotificationEmail,
                        FtpDetails}, this.GetEmailUnsubscribeReportViaFtpOperationCompleted, userState);
        }
        
        private void OnGetEmailUnsubscribeReportViaFtpOperationCompleted(object arg) {
            if ((this.GetEmailUnsubscribeReportViaFtpCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEmailUnsubscribeReportViaFtpCompleted(this, new GetEmailUnsubscribeReportViaFtpCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.euromsg.com/report/GetEmailUnsubscribeReportBetweenTwoDatesViaFtp", RequestNamespace="http://ws.euromsg.com/report", ResponseNamespace="http://ws.euromsg.com/report", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmReportResult GetEmailUnsubscribeReportBetweenTwoDatesViaFtp(string ServiceTicket, string CampaignID, string Map, string ZipPassword, string NotificationEmail, string BeginDate, string EndDate, FtpInfo FtpDetails) {
            object[] results = this.Invoke("GetEmailUnsubscribeReportBetweenTwoDatesViaFtp", new object[] {
                        ServiceTicket,
                        CampaignID,
                        Map,
                        ZipPassword,
                        NotificationEmail,
                        BeginDate,
                        EndDate,
                        FtpDetails});
            return ((EmReportResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetEmailUnsubscribeReportBetweenTwoDatesViaFtpAsync(string ServiceTicket, string CampaignID, string Map, string ZipPassword, string NotificationEmail, string BeginDate, string EndDate, FtpInfo FtpDetails) {
            this.GetEmailUnsubscribeReportBetweenTwoDatesViaFtpAsync(ServiceTicket, CampaignID, Map, ZipPassword, NotificationEmail, BeginDate, EndDate, FtpDetails, null);
        }
        
        /// <remarks/>
        public void GetEmailUnsubscribeReportBetweenTwoDatesViaFtpAsync(string ServiceTicket, string CampaignID, string Map, string ZipPassword, string NotificationEmail, string BeginDate, string EndDate, FtpInfo FtpDetails, object userState) {
            if ((this.GetEmailUnsubscribeReportBetweenTwoDatesViaFtpOperationCompleted == null)) {
                this.GetEmailUnsubscribeReportBetweenTwoDatesViaFtpOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEmailUnsubscribeReportBetweenTwoDatesViaFtpOperationCompleted);
            }
            this.InvokeAsync("GetEmailUnsubscribeReportBetweenTwoDatesViaFtp", new object[] {
                        ServiceTicket,
                        CampaignID,
                        Map,
                        ZipPassword,
                        NotificationEmail,
                        BeginDate,
                        EndDate,
                        FtpDetails}, this.GetEmailUnsubscribeReportBetweenTwoDatesViaFtpOperationCompleted, userState);
        }
        
        private void OnGetEmailUnsubscribeReportBetweenTwoDatesViaFtpOperationCompleted(object arg) {
            if ((this.GetEmailUnsubscribeReportBetweenTwoDatesViaFtpCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEmailUnsubscribeReportBetweenTwoDatesViaFtpCompleted(this, new GetEmailUnsubscribeReportBetweenTwoDatesViaFtpCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.euromsg.com/report/GetUnsubscribeReportBetweenTwoDates", RequestNamespace="http://ws.euromsg.com/report", ResponseNamespace="http://ws.euromsg.com/report", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmReportResult GetUnsubscribeReportBetweenTwoDates(string ServiceTicket, string BeginDate, string EndDate, out EmUnsubscriberDetails[] Unsubscribers) {
            object[] results = this.Invoke("GetUnsubscribeReportBetweenTwoDates", new object[] {
                        ServiceTicket,
                        BeginDate,
                        EndDate});
            Unsubscribers = ((EmUnsubscriberDetails[])(results[1]));
            return ((EmReportResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetUnsubscribeReportBetweenTwoDatesAsync(string ServiceTicket, string BeginDate, string EndDate) {
            this.GetUnsubscribeReportBetweenTwoDatesAsync(ServiceTicket, BeginDate, EndDate, null);
        }
        
        /// <remarks/>
        public void GetUnsubscribeReportBetweenTwoDatesAsync(string ServiceTicket, string BeginDate, string EndDate, object userState) {
            if ((this.GetUnsubscribeReportBetweenTwoDatesOperationCompleted == null)) {
                this.GetUnsubscribeReportBetweenTwoDatesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUnsubscribeReportBetweenTwoDatesOperationCompleted);
            }
            this.InvokeAsync("GetUnsubscribeReportBetweenTwoDates", new object[] {
                        ServiceTicket,
                        BeginDate,
                        EndDate}, this.GetUnsubscribeReportBetweenTwoDatesOperationCompleted, userState);
        }
        
        private void OnGetUnsubscribeReportBetweenTwoDatesOperationCompleted(object arg) {
            if ((this.GetUnsubscribeReportBetweenTwoDatesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUnsubscribeReportBetweenTwoDatesCompleted(this, new GetUnsubscribeReportBetweenTwoDatesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.euromsg.com/report/GetSmsOptoutReportBetweenTwoDates", RequestNamespace="http://ws.euromsg.com/report", ResponseNamespace="http://ws.euromsg.com/report", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmReportResult GetSmsOptoutReportBetweenTwoDates(string ServiceTicket, string BeginDate, string EndDate, out EmSmsOptoutList[] Unsubscribers) {
            object[] results = this.Invoke("GetSmsOptoutReportBetweenTwoDates", new object[] {
                        ServiceTicket,
                        BeginDate,
                        EndDate});
            Unsubscribers = ((EmSmsOptoutList[])(results[1]));
            return ((EmReportResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetSmsOptoutReportBetweenTwoDatesAsync(string ServiceTicket, string BeginDate, string EndDate) {
            this.GetSmsOptoutReportBetweenTwoDatesAsync(ServiceTicket, BeginDate, EndDate, null);
        }
        
        /// <remarks/>
        public void GetSmsOptoutReportBetweenTwoDatesAsync(string ServiceTicket, string BeginDate, string EndDate, object userState) {
            if ((this.GetSmsOptoutReportBetweenTwoDatesOperationCompleted == null)) {
                this.GetSmsOptoutReportBetweenTwoDatesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSmsOptoutReportBetweenTwoDatesOperationCompleted);
            }
            this.InvokeAsync("GetSmsOptoutReportBetweenTwoDates", new object[] {
                        ServiceTicket,
                        BeginDate,
                        EndDate}, this.GetSmsOptoutReportBetweenTwoDatesOperationCompleted, userState);
        }
        
        private void OnGetSmsOptoutReportBetweenTwoDatesOperationCompleted(object arg) {
            if ((this.GetSmsOptoutReportBetweenTwoDatesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSmsOptoutReportBetweenTwoDatesCompleted(this, new GetSmsOptoutReportBetweenTwoDatesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.euromsg.com/report/GetFilteredMembers", RequestNamespace="http://ws.euromsg.com/report", ResponseNamespace="http://ws.euromsg.com/report", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmReportResult GetFilteredMembers(string ServiceTicket, EmKeyOperatorValue[] Filters, string Map, string ZipPassword, string NotificationEmail, FtpInfo FtpDetails) {
            object[] results = this.Invoke("GetFilteredMembers", new object[] {
                        ServiceTicket,
                        Filters,
                        Map,
                        ZipPassword,
                        NotificationEmail,
                        FtpDetails});
            return ((EmReportResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetFilteredMembersAsync(string ServiceTicket, EmKeyOperatorValue[] Filters, string Map, string ZipPassword, string NotificationEmail, FtpInfo FtpDetails) {
            this.GetFilteredMembersAsync(ServiceTicket, Filters, Map, ZipPassword, NotificationEmail, FtpDetails, null);
        }
        
        /// <remarks/>
        public void GetFilteredMembersAsync(string ServiceTicket, EmKeyOperatorValue[] Filters, string Map, string ZipPassword, string NotificationEmail, FtpInfo FtpDetails, object userState) {
            if ((this.GetFilteredMembersOperationCompleted == null)) {
                this.GetFilteredMembersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFilteredMembersOperationCompleted);
            }
            this.InvokeAsync("GetFilteredMembers", new object[] {
                        ServiceTicket,
                        Filters,
                        Map,
                        ZipPassword,
                        NotificationEmail,
                        FtpDetails}, this.GetFilteredMembersOperationCompleted, userState);
        }
        
        private void OnGetFilteredMembersOperationCompleted(object arg) {
            if ((this.GetFilteredMembersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFilteredMembersCompleted(this, new GetFilteredMembersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.euromsg.com/report/QueryBulkFileProgress", RequestNamespace="http://ws.euromsg.com/report", ResponseNamespace="http://ws.euromsg.com/report", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmReportResult QueryBulkFileProgress(string ServiceTicket, string ConversationID) {
            object[] results = this.Invoke("QueryBulkFileProgress", new object[] {
                        ServiceTicket,
                        ConversationID});
            return ((EmReportResult)(results[0]));
        }
        
        /// <remarks/>
        public void QueryBulkFileProgressAsync(string ServiceTicket, string ConversationID) {
            this.QueryBulkFileProgressAsync(ServiceTicket, ConversationID, null);
        }
        
        /// <remarks/>
        public void QueryBulkFileProgressAsync(string ServiceTicket, string ConversationID, object userState) {
            if ((this.QueryBulkFileProgressOperationCompleted == null)) {
                this.QueryBulkFileProgressOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryBulkFileProgressOperationCompleted);
            }
            this.InvokeAsync("QueryBulkFileProgress", new object[] {
                        ServiceTicket,
                        ConversationID}, this.QueryBulkFileProgressOperationCompleted, userState);
        }
        
        private void OnQueryBulkFileProgressOperationCompleted(object arg) {
            if ((this.QueryBulkFileProgressCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryBulkFileProgressCompleted(this, new QueryBulkFileProgressCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.euromsg.com/report/RetryExportJob", RequestNamespace="http://ws.euromsg.com/report", ResponseNamespace="http://ws.euromsg.com/report", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmReportResult RetryExportJob(string ServiceTicket, string ConversationID) {
            object[] results = this.Invoke("RetryExportJob", new object[] {
                        ServiceTicket,
                        ConversationID});
            return ((EmReportResult)(results[0]));
        }
        
        /// <remarks/>
        public void RetryExportJobAsync(string ServiceTicket, string ConversationID) {
            this.RetryExportJobAsync(ServiceTicket, ConversationID, null);
        }
        
        /// <remarks/>
        public void RetryExportJobAsync(string ServiceTicket, string ConversationID, object userState) {
            if ((this.RetryExportJobOperationCompleted == null)) {
                this.RetryExportJobOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetryExportJobOperationCompleted);
            }
            this.InvokeAsync("RetryExportJob", new object[] {
                        ServiceTicket,
                        ConversationID}, this.RetryExportJobOperationCompleted, userState);
        }
        
        private void OnRetryExportJobOperationCompleted(object arg) {
            if ((this.RetryExportJobCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetryExportJobCompleted(this, new RetryExportJobCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.euromsg.com/report/QueryOngoingEmailStatus", RequestNamespace="http://ws.euromsg.com/report", ResponseNamespace="http://ws.euromsg.com/report", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmOngoingEmailResult QueryOngoingEmailStatus(string ServiceTicket, string CampID, string TransacitonID) {
            object[] results = this.Invoke("QueryOngoingEmailStatus", new object[] {
                        ServiceTicket,
                        CampID,
                        TransacitonID});
            return ((EmOngoingEmailResult)(results[0]));
        }
        
        /// <remarks/>
        public void QueryOngoingEmailStatusAsync(string ServiceTicket, string CampID, string TransacitonID) {
            this.QueryOngoingEmailStatusAsync(ServiceTicket, CampID, TransacitonID, null);
        }
        
        /// <remarks/>
        public void QueryOngoingEmailStatusAsync(string ServiceTicket, string CampID, string TransacitonID, object userState) {
            if ((this.QueryOngoingEmailStatusOperationCompleted == null)) {
                this.QueryOngoingEmailStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryOngoingEmailStatusOperationCompleted);
            }
            this.InvokeAsync("QueryOngoingEmailStatus", new object[] {
                        ServiceTicket,
                        CampID,
                        TransacitonID}, this.QueryOngoingEmailStatusOperationCompleted, userState);
        }
        
        private void OnQueryOngoingEmailStatusOperationCompleted(object arg) {
            if ((this.QueryOngoingEmailStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryOngoingEmailStatusCompleted(this, new QueryOngoingEmailStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.euromsg.com/report/QueryOngoingSmsStatus", RequestNamespace="http://ws.euromsg.com/report", ResponseNamespace="http://ws.euromsg.com/report", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmResult QueryOngoingSmsStatus(string ServiceTicket, string CampID, string TransacitonID, out EmSmsDeliveryResult DeliveryResult) {
            object[] results = this.Invoke("QueryOngoingSmsStatus", new object[] {
                        ServiceTicket,
                        CampID,
                        TransacitonID});
            DeliveryResult = ((EmSmsDeliveryResult)(results[1]));
            return ((EmResult)(results[0]));
        }
        
        /// <remarks/>
        public void QueryOngoingSmsStatusAsync(string ServiceTicket, string CampID, string TransacitonID) {
            this.QueryOngoingSmsStatusAsync(ServiceTicket, CampID, TransacitonID, null);
        }
        
        /// <remarks/>
        public void QueryOngoingSmsStatusAsync(string ServiceTicket, string CampID, string TransacitonID, object userState) {
            if ((this.QueryOngoingSmsStatusOperationCompleted == null)) {
                this.QueryOngoingSmsStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryOngoingSmsStatusOperationCompleted);
            }
            this.InvokeAsync("QueryOngoingSmsStatus", new object[] {
                        ServiceTicket,
                        CampID,
                        TransacitonID}, this.QueryOngoingSmsStatusOperationCompleted, userState);
        }
        
        private void OnQueryOngoingSmsStatusOperationCompleted(object arg) {
            if ((this.QueryOngoingSmsStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryOngoingSmsStatusCompleted(this, new QueryOngoingSmsStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.euromsg.com/report/GetIncomingSmsMessages", RequestNamespace="http://ws.euromsg.com/report", ResponseNamespace="http://ws.euromsg.com/report", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmReportResult GetIncomingSmsMessages(string ServiceTicket, string BeginTime, string EndTime, out EmSmsIncomingMessage[] SmsMessages) {
            object[] results = this.Invoke("GetIncomingSmsMessages", new object[] {
                        ServiceTicket,
                        BeginTime,
                        EndTime});
            SmsMessages = ((EmSmsIncomingMessage[])(results[1]));
            return ((EmReportResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetIncomingSmsMessagesAsync(string ServiceTicket, string BeginTime, string EndTime) {
            this.GetIncomingSmsMessagesAsync(ServiceTicket, BeginTime, EndTime, null);
        }
        
        /// <remarks/>
        public void GetIncomingSmsMessagesAsync(string ServiceTicket, string BeginTime, string EndTime, object userState) {
            if ((this.GetIncomingSmsMessagesOperationCompleted == null)) {
                this.GetIncomingSmsMessagesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetIncomingSmsMessagesOperationCompleted);
            }
            this.InvokeAsync("GetIncomingSmsMessages", new object[] {
                        ServiceTicket,
                        BeginTime,
                        EndTime}, this.GetIncomingSmsMessagesOperationCompleted, userState);
        }
        
        private void OnGetIncomingSmsMessagesOperationCompleted(object arg) {
            if ((this.GetIncomingSmsMessagesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetIncomingSmsMessagesCompleted(this, new GetIncomingSmsMessagesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.euromsg.com/report/GetSmsCampaignReport", RequestNamespace="http://ws.euromsg.com/report", ResponseNamespace="http://ws.euromsg.com/report", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmReportResult GetSmsCampaignReport(string ServiceTicket, string BeginDate, string EndDate, out EmSmsCampaignReportResult[] Campaigns) {
            object[] results = this.Invoke("GetSmsCampaignReport", new object[] {
                        ServiceTicket,
                        BeginDate,
                        EndDate});
            Campaigns = ((EmSmsCampaignReportResult[])(results[1]));
            return ((EmReportResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetSmsCampaignReportAsync(string ServiceTicket, string BeginDate, string EndDate) {
            this.GetSmsCampaignReportAsync(ServiceTicket, BeginDate, EndDate, null);
        }
        
        /// <remarks/>
        public void GetSmsCampaignReportAsync(string ServiceTicket, string BeginDate, string EndDate, object userState) {
            if ((this.GetSmsCampaignReportOperationCompleted == null)) {
                this.GetSmsCampaignReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSmsCampaignReportOperationCompleted);
            }
            this.InvokeAsync("GetSmsCampaignReport", new object[] {
                        ServiceTicket,
                        BeginDate,
                        EndDate}, this.GetSmsCampaignReportOperationCompleted, userState);
        }
        
        private void OnGetSmsCampaignReportOperationCompleted(object arg) {
            if ((this.GetSmsCampaignReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSmsCampaignReportCompleted(this, new GetSmsCampaignReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.euromsg.com/report/GetSmsCampaignReportWithCampID", RequestNamespace="http://ws.euromsg.com/report", ResponseNamespace="http://ws.euromsg.com/report", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmReportResult GetSmsCampaignReportWithCampID(string ServiceTicket, string SmsCampID, out EmSmsCampaignReportResult SmsCampaign) {
            object[] results = this.Invoke("GetSmsCampaignReportWithCampID", new object[] {
                        ServiceTicket,
                        SmsCampID});
            SmsCampaign = ((EmSmsCampaignReportResult)(results[1]));
            return ((EmReportResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetSmsCampaignReportWithCampIDAsync(string ServiceTicket, string SmsCampID) {
            this.GetSmsCampaignReportWithCampIDAsync(ServiceTicket, SmsCampID, null);
        }
        
        /// <remarks/>
        public void GetSmsCampaignReportWithCampIDAsync(string ServiceTicket, string SmsCampID, object userState) {
            if ((this.GetSmsCampaignReportWithCampIDOperationCompleted == null)) {
                this.GetSmsCampaignReportWithCampIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSmsCampaignReportWithCampIDOperationCompleted);
            }
            this.InvokeAsync("GetSmsCampaignReportWithCampID", new object[] {
                        ServiceTicket,
                        SmsCampID}, this.GetSmsCampaignReportWithCampIDOperationCompleted, userState);
        }
        
        private void OnGetSmsCampaignReportWithCampIDOperationCompleted(object arg) {
            if ((this.GetSmsCampaignReportWithCampIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSmsCampaignReportWithCampIDCompleted(this, new GetSmsCampaignReportWithCampIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.euromsg.com/report/GetSmsCampaignDeliveryStatusReportViaFtp", RequestNamespace="http://ws.euromsg.com/report", ResponseNamespace="http://ws.euromsg.com/report", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmReportResult GetSmsCampaignDeliveryStatusReportViaFtp(string ServiceTicket, string CampaignID, string Map, string ZipPassword, string NotificationEmail, FtpInfo FtpDetails) {
            object[] results = this.Invoke("GetSmsCampaignDeliveryStatusReportViaFtp", new object[] {
                        ServiceTicket,
                        CampaignID,
                        Map,
                        ZipPassword,
                        NotificationEmail,
                        FtpDetails});
            return ((EmReportResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetSmsCampaignDeliveryStatusReportViaFtpAsync(string ServiceTicket, string CampaignID, string Map, string ZipPassword, string NotificationEmail, FtpInfo FtpDetails) {
            this.GetSmsCampaignDeliveryStatusReportViaFtpAsync(ServiceTicket, CampaignID, Map, ZipPassword, NotificationEmail, FtpDetails, null);
        }
        
        /// <remarks/>
        public void GetSmsCampaignDeliveryStatusReportViaFtpAsync(string ServiceTicket, string CampaignID, string Map, string ZipPassword, string NotificationEmail, FtpInfo FtpDetails, object userState) {
            if ((this.GetSmsCampaignDeliveryStatusReportViaFtpOperationCompleted == null)) {
                this.GetSmsCampaignDeliveryStatusReportViaFtpOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSmsCampaignDeliveryStatusReportViaFtpOperationCompleted);
            }
            this.InvokeAsync("GetSmsCampaignDeliveryStatusReportViaFtp", new object[] {
                        ServiceTicket,
                        CampaignID,
                        Map,
                        ZipPassword,
                        NotificationEmail,
                        FtpDetails}, this.GetSmsCampaignDeliveryStatusReportViaFtpOperationCompleted, userState);
        }
        
        private void OnGetSmsCampaignDeliveryStatusReportViaFtpOperationCompleted(object arg) {
            if ((this.GetSmsCampaignDeliveryStatusReportViaFtpCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSmsCampaignDeliveryStatusReportViaFtpCompleted(this, new GetSmsCampaignDeliveryStatusReportViaFtpCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.euromsg.com/report/GetSmsCampaignDeliveryStatusReportBetweenTwoDatesVia" +
            "Ftp", RequestNamespace="http://ws.euromsg.com/report", ResponseNamespace="http://ws.euromsg.com/report", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmReportResult GetSmsCampaignDeliveryStatusReportBetweenTwoDatesViaFtp(string ServiceTicket, string CampaignID, string Map, string ZipPassword, string NotificationEmail, string BeginDate, string EndDate, FtpInfo FtpDetails) {
            object[] results = this.Invoke("GetSmsCampaignDeliveryStatusReportBetweenTwoDatesViaFtp", new object[] {
                        ServiceTicket,
                        CampaignID,
                        Map,
                        ZipPassword,
                        NotificationEmail,
                        BeginDate,
                        EndDate,
                        FtpDetails});
            return ((EmReportResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetSmsCampaignDeliveryStatusReportBetweenTwoDatesViaFtpAsync(string ServiceTicket, string CampaignID, string Map, string ZipPassword, string NotificationEmail, string BeginDate, string EndDate, FtpInfo FtpDetails) {
            this.GetSmsCampaignDeliveryStatusReportBetweenTwoDatesViaFtpAsync(ServiceTicket, CampaignID, Map, ZipPassword, NotificationEmail, BeginDate, EndDate, FtpDetails, null);
        }
        
        /// <remarks/>
        public void GetSmsCampaignDeliveryStatusReportBetweenTwoDatesViaFtpAsync(string ServiceTicket, string CampaignID, string Map, string ZipPassword, string NotificationEmail, string BeginDate, string EndDate, FtpInfo FtpDetails, object userState) {
            if ((this.GetSmsCampaignDeliveryStatusReportBetweenTwoDatesViaFtpOperationCompleted == null)) {
                this.GetSmsCampaignDeliveryStatusReportBetweenTwoDatesViaFtpOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSmsCampaignDeliveryStatusReportBetweenTwoDatesViaFtpOperationCompleted);
            }
            this.InvokeAsync("GetSmsCampaignDeliveryStatusReportBetweenTwoDatesViaFtp", new object[] {
                        ServiceTicket,
                        CampaignID,
                        Map,
                        ZipPassword,
                        NotificationEmail,
                        BeginDate,
                        EndDate,
                        FtpDetails}, this.GetSmsCampaignDeliveryStatusReportBetweenTwoDatesViaFtpOperationCompleted, userState);
        }
        
        private void OnGetSmsCampaignDeliveryStatusReportBetweenTwoDatesViaFtpOperationCompleted(object arg) {
            if ((this.GetSmsCampaignDeliveryStatusReportBetweenTwoDatesViaFtpCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSmsCampaignDeliveryStatusReportBetweenTwoDatesViaFtpCompleted(this, new GetSmsCampaignDeliveryStatusReportBetweenTwoDatesViaFtpCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.euromsg.com/report/QuerySendingPushMessageToMembers", RequestNamespace="http://ws.euromsg.com/report", ResponseNamespace="http://ws.euromsg.com/report", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmPushMessageReportResult QuerySendingPushMessageToMembers(string ServiceTicket, string key, string value, string beginDate, string endDate, int pageSize, int pageCount) {
            object[] results = this.Invoke("QuerySendingPushMessageToMembers", new object[] {
                        ServiceTicket,
                        key,
                        value,
                        beginDate,
                        endDate,
                        pageSize,
                        pageCount});
            return ((EmPushMessageReportResult)(results[0]));
        }
        
        /// <remarks/>
        public void QuerySendingPushMessageToMembersAsync(string ServiceTicket, string key, string value, string beginDate, string endDate, int pageSize, int pageCount) {
            this.QuerySendingPushMessageToMembersAsync(ServiceTicket, key, value, beginDate, endDate, pageSize, pageCount, null);
        }
        
        /// <remarks/>
        public void QuerySendingPushMessageToMembersAsync(string ServiceTicket, string key, string value, string beginDate, string endDate, int pageSize, int pageCount, object userState) {
            if ((this.QuerySendingPushMessageToMembersOperationCompleted == null)) {
                this.QuerySendingPushMessageToMembersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQuerySendingPushMessageToMembersOperationCompleted);
            }
            this.InvokeAsync("QuerySendingPushMessageToMembers", new object[] {
                        ServiceTicket,
                        key,
                        value,
                        beginDate,
                        endDate,
                        pageSize,
                        pageCount}, this.QuerySendingPushMessageToMembersOperationCompleted, userState);
        }
        
        private void OnQuerySendingPushMessageToMembersOperationCompleted(object arg) {
            if ((this.QuerySendingPushMessageToMembersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QuerySendingPushMessageToMembersCompleted(this, new QuerySendingPushMessageToMembersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.euromsg.com/report/QueryDataWarehouseUploadProgress", RequestNamespace="http://ws.euromsg.com/report", ResponseNamespace="http://ws.euromsg.com/report", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmReportResult QueryDataWarehouseUploadProgress(string ServiceTicket, string FileName, string BeginTime, string EndTime, out EmDWTableReport[] DWTables) {
            object[] results = this.Invoke("QueryDataWarehouseUploadProgress", new object[] {
                        ServiceTicket,
                        FileName,
                        BeginTime,
                        EndTime});
            DWTables = ((EmDWTableReport[])(results[1]));
            return ((EmReportResult)(results[0]));
        }
        
        /// <remarks/>
        public void QueryDataWarehouseUploadProgressAsync(string ServiceTicket, string FileName, string BeginTime, string EndTime) {
            this.QueryDataWarehouseUploadProgressAsync(ServiceTicket, FileName, BeginTime, EndTime, null);
        }
        
        /// <remarks/>
        public void QueryDataWarehouseUploadProgressAsync(string ServiceTicket, string FileName, string BeginTime, string EndTime, object userState) {
            if ((this.QueryDataWarehouseUploadProgressOperationCompleted == null)) {
                this.QueryDataWarehouseUploadProgressOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryDataWarehouseUploadProgressOperationCompleted);
            }
            this.InvokeAsync("QueryDataWarehouseUploadProgress", new object[] {
                        ServiceTicket,
                        FileName,
                        BeginTime,
                        EndTime}, this.QueryDataWarehouseUploadProgressOperationCompleted, userState);
        }
        
        private void OnQueryDataWarehouseUploadProgressOperationCompleted(object arg) {
            if ((this.QueryDataWarehouseUploadProgressCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryDataWarehouseUploadProgressCompleted(this, new QueryDataWarehouseUploadProgressCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.euromsg.com/report")]
    public partial class FtpInfo {
        
        private string serverIPField;
        
        private int portField;
        
        private string usernameField;
        
        private string passwordField;
        
        private string changeDirField;
        
        private bool secureField;
        
        private string keyField;
        
        /// <remarks/>
        public string ServerIP {
            get {
                return this.serverIPField;
            }
            set {
                this.serverIPField = value;
            }
        }
        
        /// <remarks/>
        public int Port {
            get {
                return this.portField;
            }
            set {
                this.portField = value;
            }
        }
        
        /// <remarks/>
        public string Username {
            get {
                return this.usernameField;
            }
            set {
                this.usernameField = value;
            }
        }
        
        /// <remarks/>
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        public string ChangeDir {
            get {
                return this.changeDirField;
            }
            set {
                this.changeDirField = value;
            }
        }
        
        /// <remarks/>
        public bool Secure {
            get {
                return this.secureField;
            }
            set {
                this.secureField = value;
            }
        }
        
        /// <remarks/>
        public string Key {
            get {
                return this.keyField;
            }
            set {
                this.keyField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.euromsg.com/report")]
    public partial class EmDWTableReport {
        
        private string dWTableIDField;
        
        private string fileNameField;
        
        private string zipFileNameField;
        
        private string statusField;
        
        private string errorMessageField;
        
        private int totalRowCountField;
        
        private int invalidEmailCountField;
        
        private int invalidGsmCountField;
        
        private int blackListedEmailCountField;
        
        private int blackListedGsmCountField;
        
        private int newMemberCountField;
        
        private string processStartTimeField;
        
        private string processEndTimeField;
        
        private bool isBaseField;
        
        private string fileVersionField;
        
        /// <remarks/>
        public string DWTableID {
            get {
                return this.dWTableIDField;
            }
            set {
                this.dWTableIDField = value;
            }
        }
        
        /// <remarks/>
        public string FileName {
            get {
                return this.fileNameField;
            }
            set {
                this.fileNameField = value;
            }
        }
        
        /// <remarks/>
        public string ZipFileName {
            get {
                return this.zipFileNameField;
            }
            set {
                this.zipFileNameField = value;
            }
        }
        
        /// <remarks/>
        public string Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        public int TotalRowCount {
            get {
                return this.totalRowCountField;
            }
            set {
                this.totalRowCountField = value;
            }
        }
        
        /// <remarks/>
        public int InvalidEmailCount {
            get {
                return this.invalidEmailCountField;
            }
            set {
                this.invalidEmailCountField = value;
            }
        }
        
        /// <remarks/>
        public int InvalidGsmCount {
            get {
                return this.invalidGsmCountField;
            }
            set {
                this.invalidGsmCountField = value;
            }
        }
        
        /// <remarks/>
        public int BlackListedEmailCount {
            get {
                return this.blackListedEmailCountField;
            }
            set {
                this.blackListedEmailCountField = value;
            }
        }
        
        /// <remarks/>
        public int BlackListedGsmCount {
            get {
                return this.blackListedGsmCountField;
            }
            set {
                this.blackListedGsmCountField = value;
            }
        }
        
        /// <remarks/>
        public int NewMemberCount {
            get {
                return this.newMemberCountField;
            }
            set {
                this.newMemberCountField = value;
            }
        }
        
        /// <remarks/>
        public string ProcessStartTime {
            get {
                return this.processStartTimeField;
            }
            set {
                this.processStartTimeField = value;
            }
        }
        
        /// <remarks/>
        public string ProcessEndTime {
            get {
                return this.processEndTimeField;
            }
            set {
                this.processEndTimeField = value;
            }
        }
        
        /// <remarks/>
        public bool IsBase {
            get {
                return this.isBaseField;
            }
            set {
                this.isBaseField = value;
            }
        }
        
        /// <remarks/>
        public string FileVersion {
            get {
                return this.fileVersionField;
            }
            set {
                this.fileVersionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.euromsg.com/report")]
    public partial class EmSmsCampaignReportResult {
        
        private string campaignIDField;
        
        private string nameField;
        
        private string originatorField;
        
        private string creationDateField;
        
        private string deliveryStartField;
        
        private string statusField;
        
        private string gsmColumnField;
        
        private string smsMessageField;
        
        private string uniqueSmsField;
        
        private string totalSmsCountField;
        
        private string duplicateSmsCountField;
        
        private string preparedSmsCountField;
        
        private string totalSentField;
        
        private string readField;
        
        private string waitingField;
        
        private string failField;
        
        private string timeoutField;
        
        private string listsField;
        
        /// <remarks/>
        public string CampaignID {
            get {
                return this.campaignIDField;
            }
            set {
                this.campaignIDField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Originator {
            get {
                return this.originatorField;
            }
            set {
                this.originatorField = value;
            }
        }
        
        /// <remarks/>
        public string CreationDate {
            get {
                return this.creationDateField;
            }
            set {
                this.creationDateField = value;
            }
        }
        
        /// <remarks/>
        public string DeliveryStart {
            get {
                return this.deliveryStartField;
            }
            set {
                this.deliveryStartField = value;
            }
        }
        
        /// <remarks/>
        public string Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public string GsmColumn {
            get {
                return this.gsmColumnField;
            }
            set {
                this.gsmColumnField = value;
            }
        }
        
        /// <remarks/>
        public string SmsMessage {
            get {
                return this.smsMessageField;
            }
            set {
                this.smsMessageField = value;
            }
        }
        
        /// <remarks/>
        public string UniqueSms {
            get {
                return this.uniqueSmsField;
            }
            set {
                this.uniqueSmsField = value;
            }
        }
        
        /// <remarks/>
        public string TotalSmsCount {
            get {
                return this.totalSmsCountField;
            }
            set {
                this.totalSmsCountField = value;
            }
        }
        
        /// <remarks/>
        public string DuplicateSmsCount {
            get {
                return this.duplicateSmsCountField;
            }
            set {
                this.duplicateSmsCountField = value;
            }
        }
        
        /// <remarks/>
        public string PreparedSmsCount {
            get {
                return this.preparedSmsCountField;
            }
            set {
                this.preparedSmsCountField = value;
            }
        }
        
        /// <remarks/>
        public string TotalSent {
            get {
                return this.totalSentField;
            }
            set {
                this.totalSentField = value;
            }
        }
        
        /// <remarks/>
        public string Read {
            get {
                return this.readField;
            }
            set {
                this.readField = value;
            }
        }
        
        /// <remarks/>
        public string Waiting {
            get {
                return this.waitingField;
            }
            set {
                this.waitingField = value;
            }
        }
        
        /// <remarks/>
        public string Fail {
            get {
                return this.failField;
            }
            set {
                this.failField = value;
            }
        }
        
        /// <remarks/>
        public string Timeout {
            get {
                return this.timeoutField;
            }
            set {
                this.timeoutField = value;
            }
        }
        
        /// <remarks/>
        public string Lists {
            get {
                return this.listsField;
            }
            set {
                this.listsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.euromsg.com/report")]
    public partial class EmSmsIncomingMessage {
        
        private string gsmNumberField;
        
        private string messageField;
        
        private string operatorMessageIDField;
        
        private string sendDateField;
        
        private string operatorField;
        
        /// <remarks/>
        public string GsmNumber {
            get {
                return this.gsmNumberField;
            }
            set {
                this.gsmNumberField = value;
            }
        }
        
        /// <remarks/>
        public string Message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
        
        /// <remarks/>
        public string OperatorMessageID {
            get {
                return this.operatorMessageIDField;
            }
            set {
                this.operatorMessageIDField = value;
            }
        }
        
        /// <remarks/>
        public string SendDate {
            get {
                return this.sendDateField;
            }
            set {
                this.sendDateField = value;
            }
        }
        
        /// <remarks/>
        public string Operator {
            get {
                return this.operatorField;
            }
            set {
                this.operatorField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.euromsg.com/report")]
    public partial class EmSmsDeliveryResult {
        
        private string gsmNumberField;
        
        private string deliveryResultField;
        
        private string deliveryDetailField;
        
        private string deliveryTimeField;
        
        private string deliveredMessageField;
        
        private string postTypeField;
        
        private string keyIDField;
        
        private string sendDateField;
        
        /// <remarks/>
        public string GsmNumber {
            get {
                return this.gsmNumberField;
            }
            set {
                this.gsmNumberField = value;
            }
        }
        
        /// <remarks/>
        public string DeliveryResult {
            get {
                return this.deliveryResultField;
            }
            set {
                this.deliveryResultField = value;
            }
        }
        
        /// <remarks/>
        public string DeliveryDetail {
            get {
                return this.deliveryDetailField;
            }
            set {
                this.deliveryDetailField = value;
            }
        }
        
        /// <remarks/>
        public string DeliveryTime {
            get {
                return this.deliveryTimeField;
            }
            set {
                this.deliveryTimeField = value;
            }
        }
        
        /// <remarks/>
        public string DeliveredMessage {
            get {
                return this.deliveredMessageField;
            }
            set {
                this.deliveredMessageField = value;
            }
        }
        
        /// <remarks/>
        public string PostType {
            get {
                return this.postTypeField;
            }
            set {
                this.postTypeField = value;
            }
        }
        
        /// <remarks/>
        public string KeyID {
            get {
                return this.keyIDField;
            }
            set {
                this.keyIDField = value;
            }
        }
        
        /// <remarks/>
        public string SendDate {
            get {
                return this.sendDateField;
            }
            set {
                this.sendDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.euromsg.com/report")]
    public partial class EmKeyOperatorValue {
        
        private string keyField;
        
        private string operatorField;
        
        private string valueField;
        
        /// <remarks/>
        public string Key {
            get {
                return this.keyField;
            }
            set {
                this.keyField = value;
            }
        }
        
        /// <remarks/>
        public string Operator {
            get {
                return this.operatorField;
            }
            set {
                this.operatorField = value;
            }
        }
        
        /// <remarks/>
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.euromsg.com/report")]
    public partial class EmSmsOptoutEffectedMembers {
        
        private string keyColumnValueField;
        
        private string emailField;
        
        private string gsmField;
        
        /// <remarks/>
        public string KeyColumnValue {
            get {
                return this.keyColumnValueField;
            }
            set {
                this.keyColumnValueField = value;
            }
        }
        
        /// <remarks/>
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        public string Gsm {
            get {
                return this.gsmField;
            }
            set {
                this.gsmField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.euromsg.com/report")]
    public partial class EmSmsOptoutList {
        
        private string sourceNumberField;
        
        private string phoneNumberField;
        
        private string messageField;
        
        private string operatorField;
        
        private string recordDateField;
        
        private string messageTypeField;
        
        private EmSmsOptoutEffectedMembers[] effectedMembersField;
        
        /// <remarks/>
        public string SourceNumber {
            get {
                return this.sourceNumberField;
            }
            set {
                this.sourceNumberField = value;
            }
        }
        
        /// <remarks/>
        public string PhoneNumber {
            get {
                return this.phoneNumberField;
            }
            set {
                this.phoneNumberField = value;
            }
        }
        
        /// <remarks/>
        public string Message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
        
        /// <remarks/>
        public string Operator {
            get {
                return this.operatorField;
            }
            set {
                this.operatorField = value;
            }
        }
        
        /// <remarks/>
        public string RecordDate {
            get {
                return this.recordDateField;
            }
            set {
                this.recordDateField = value;
            }
        }
        
        /// <remarks/>
        public string MessageType {
            get {
                return this.messageTypeField;
            }
            set {
                this.messageTypeField = value;
            }
        }
        
        /// <remarks/>
        public EmSmsOptoutEffectedMembers[] EffectedMembers {
            get {
                return this.effectedMembersField;
            }
            set {
                this.effectedMembersField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.euromsg.com/report")]
    public partial class EmUnsubscriberDetails {
        
        private string keyIdField;
        
        private string emailField;
        
        private string unsubscribeTimeField;
        
        private string reasonField;
        
        private string gsmNoField;
        
        private string emailPermitField;
        
        private string gsmPermitField;
        
        private string statusField;
        
        /// <remarks/>
        public string KeyId {
            get {
                return this.keyIdField;
            }
            set {
                this.keyIdField = value;
            }
        }
        
        /// <remarks/>
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        public string UnsubscribeTime {
            get {
                return this.unsubscribeTimeField;
            }
            set {
                this.unsubscribeTimeField = value;
            }
        }
        
        /// <remarks/>
        public string Reason {
            get {
                return this.reasonField;
            }
            set {
                this.reasonField = value;
            }
        }
        
        /// <remarks/>
        public string GsmNo {
            get {
                return this.gsmNoField;
            }
            set {
                this.gsmNoField = value;
            }
        }
        
        /// <remarks/>
        public string EmailPermit {
            get {
                return this.emailPermitField;
            }
            set {
                this.emailPermitField = value;
            }
        }
        
        /// <remarks/>
        public string GsmPermit {
            get {
                return this.gsmPermitField;
            }
            set {
                this.gsmPermitField = value;
            }
        }
        
        /// <remarks/>
        public string Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.euromsg.com/report")]
    public partial class CampaignLink {
        
        private string linkIDField;
        
        private string linkNameField;
        
        private string linkField;
        
        private string linkTypeField;
        
        private int totalClickCountField;
        
        private int uniqueClickCountField;
        
        /// <remarks/>
        public string LinkID {
            get {
                return this.linkIDField;
            }
            set {
                this.linkIDField = value;
            }
        }
        
        /// <remarks/>
        public string LinkName {
            get {
                return this.linkNameField;
            }
            set {
                this.linkNameField = value;
            }
        }
        
        /// <remarks/>
        public string Link {
            get {
                return this.linkField;
            }
            set {
                this.linkField = value;
            }
        }
        
        /// <remarks/>
        public string LinkType {
            get {
                return this.linkTypeField;
            }
            set {
                this.linkTypeField = value;
            }
        }
        
        /// <remarks/>
        public int TotalClickCount {
            get {
                return this.totalClickCountField;
            }
            set {
                this.totalClickCountField = value;
            }
        }
        
        /// <remarks/>
        public int UniqueClickCount {
            get {
                return this.uniqueClickCountField;
            }
            set {
                this.uniqueClickCountField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.euromsg.com/report")]
    public partial class EmCampaignReportResult {
        
        private string nameField;
        
        private string subjectField;
        
        private string customerTitleField;
        
        private string creationDateField;
        
        private string deliveryStartField;
        
        private string deliveryFinishField;
        
        private string campaignIDField;
        
        private string totalSentField;
        
        private string totalReadField;
        
        private string hardBounceField;
        
        private string softBounceField;
        
        private string otherField;
        
        private string uniqueReadField;
        
        private string uniqueClickField;
        
        private string totalClickField;
        
        private string readRatioField;
        
        private string clickRatioField;
        
        private string hotmailJunkCountField;
        
        private string yahooJunkCountField;
        
        private string listsField;
        
        private string statusField;
        
        private string[] classificationField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Subject {
            get {
                return this.subjectField;
            }
            set {
                this.subjectField = value;
            }
        }
        
        /// <remarks/>
        public string CustomerTitle {
            get {
                return this.customerTitleField;
            }
            set {
                this.customerTitleField = value;
            }
        }
        
        /// <remarks/>
        public string CreationDate {
            get {
                return this.creationDateField;
            }
            set {
                this.creationDateField = value;
            }
        }
        
        /// <remarks/>
        public string DeliveryStart {
            get {
                return this.deliveryStartField;
            }
            set {
                this.deliveryStartField = value;
            }
        }
        
        /// <remarks/>
        public string DeliveryFinish {
            get {
                return this.deliveryFinishField;
            }
            set {
                this.deliveryFinishField = value;
            }
        }
        
        /// <remarks/>
        public string CampaignID {
            get {
                return this.campaignIDField;
            }
            set {
                this.campaignIDField = value;
            }
        }
        
        /// <remarks/>
        public string TotalSent {
            get {
                return this.totalSentField;
            }
            set {
                this.totalSentField = value;
            }
        }
        
        /// <remarks/>
        public string TotalRead {
            get {
                return this.totalReadField;
            }
            set {
                this.totalReadField = value;
            }
        }
        
        /// <remarks/>
        public string HardBounce {
            get {
                return this.hardBounceField;
            }
            set {
                this.hardBounceField = value;
            }
        }
        
        /// <remarks/>
        public string SoftBounce {
            get {
                return this.softBounceField;
            }
            set {
                this.softBounceField = value;
            }
        }
        
        /// <remarks/>
        public string Other {
            get {
                return this.otherField;
            }
            set {
                this.otherField = value;
            }
        }
        
        /// <remarks/>
        public string UniqueRead {
            get {
                return this.uniqueReadField;
            }
            set {
                this.uniqueReadField = value;
            }
        }
        
        /// <remarks/>
        public string UniqueClick {
            get {
                return this.uniqueClickField;
            }
            set {
                this.uniqueClickField = value;
            }
        }
        
        /// <remarks/>
        public string TotalClick {
            get {
                return this.totalClickField;
            }
            set {
                this.totalClickField = value;
            }
        }
        
        /// <remarks/>
        public string ReadRatio {
            get {
                return this.readRatioField;
            }
            set {
                this.readRatioField = value;
            }
        }
        
        /// <remarks/>
        public string ClickRatio {
            get {
                return this.clickRatioField;
            }
            set {
                this.clickRatioField = value;
            }
        }
        
        /// <remarks/>
        public string HotmailJunkCount {
            get {
                return this.hotmailJunkCountField;
            }
            set {
                this.hotmailJunkCountField = value;
            }
        }
        
        /// <remarks/>
        public string YahooJunkCount {
            get {
                return this.yahooJunkCountField;
            }
            set {
                this.yahooJunkCountField = value;
            }
        }
        
        /// <remarks/>
        public string Lists {
            get {
                return this.listsField;
            }
            set {
                this.listsField = value;
            }
        }
        
        /// <remarks/>
        public string Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public string[] Classification {
            get {
                return this.classificationField;
            }
            set {
                this.classificationField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.euromsg.com/report")]
    public partial class EmPushMessage {
        
        private string pushIdField;
        
        private EmPushType typeField;
        
        private string textField;
        
        private string targetUrlField;
        
        private string mediaUrlField;
        
        private string memberIdField;
        
        private System.DateTime sentTimeField;
        
        private string packetStatusField;
        
        private string messageStatusCodeField;
        
        private string messageStatusField;
        
        private string campIdField;
        
        private string campNameField;
        
        private string contentTypeField;
        
        private bool isABCustomizationField;
        
        private string textMessageAField;
        
        private string textMessageBField;
        
        private string empushTokenField;
        
        private string paramsField;
        
        private string alternateMessageField;
        
        private object[] systemVariablesField;
        
        private string promoTableIdField;
        
        private string customerIdField;
        
        /// <remarks/>
        public string PushId {
            get {
                return this.pushIdField;
            }
            set {
                this.pushIdField = value;
            }
        }
        
        /// <remarks/>
        public EmPushType Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public string Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
        
        /// <remarks/>
        public string TargetUrl {
            get {
                return this.targetUrlField;
            }
            set {
                this.targetUrlField = value;
            }
        }
        
        /// <remarks/>
        public string MediaUrl {
            get {
                return this.mediaUrlField;
            }
            set {
                this.mediaUrlField = value;
            }
        }
        
        /// <remarks/>
        public string MemberId {
            get {
                return this.memberIdField;
            }
            set {
                this.memberIdField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime SentTime {
            get {
                return this.sentTimeField;
            }
            set {
                this.sentTimeField = value;
            }
        }
        
        /// <remarks/>
        public string PacketStatus {
            get {
                return this.packetStatusField;
            }
            set {
                this.packetStatusField = value;
            }
        }
        
        /// <remarks/>
        public string MessageStatusCode {
            get {
                return this.messageStatusCodeField;
            }
            set {
                this.messageStatusCodeField = value;
            }
        }
        
        /// <remarks/>
        public string MessageStatus {
            get {
                return this.messageStatusField;
            }
            set {
                this.messageStatusField = value;
            }
        }
        
        /// <remarks/>
        public string CampId {
            get {
                return this.campIdField;
            }
            set {
                this.campIdField = value;
            }
        }
        
        /// <remarks/>
        public string CampName {
            get {
                return this.campNameField;
            }
            set {
                this.campNameField = value;
            }
        }
        
        /// <remarks/>
        public string ContentType {
            get {
                return this.contentTypeField;
            }
            set {
                this.contentTypeField = value;
            }
        }
        
        /// <remarks/>
        public bool IsABCustomization {
            get {
                return this.isABCustomizationField;
            }
            set {
                this.isABCustomizationField = value;
            }
        }
        
        /// <remarks/>
        public string TextMessageA {
            get {
                return this.textMessageAField;
            }
            set {
                this.textMessageAField = value;
            }
        }
        
        /// <remarks/>
        public string TextMessageB {
            get {
                return this.textMessageBField;
            }
            set {
                this.textMessageBField = value;
            }
        }
        
        /// <remarks/>
        public string EmpushToken {
            get {
                return this.empushTokenField;
            }
            set {
                this.empushTokenField = value;
            }
        }
        
        /// <remarks/>
        public string Params {
            get {
                return this.paramsField;
            }
            set {
                this.paramsField = value;
            }
        }
        
        /// <remarks/>
        public string AlternateMessage {
            get {
                return this.alternateMessageField;
            }
            set {
                this.alternateMessageField = value;
            }
        }
        
        /// <remarks/>
        public object[] SystemVariables {
            get {
                return this.systemVariablesField;
            }
            set {
                this.systemVariablesField = value;
            }
        }
        
        /// <remarks/>
        public string PromoTableId {
            get {
                return this.promoTableIdField;
            }
            set {
                this.promoTableIdField = value;
            }
        }
        
        /// <remarks/>
        public string CustomerId {
            get {
                return this.customerIdField;
            }
            set {
                this.customerIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.euromsg.com/report")]
    public enum EmPushType {
        
        /// <remarks/>
        Image,
        
        /// <remarks/>
        Video,
        
        /// <remarks/>
        Text,
        
        /// <remarks/>
        Settings,
        
        /// <remarks/>
        Survey,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(EmPushMessageReportResult))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(EmOngoingEmailResult))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(EmReportResult))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.euromsg.com/report")]
    public partial class EmResult {
        
        private string codeField;
        
        private string messageField;
        
        private string detailedMessageField;
        
        /// <remarks/>
        public string Code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
            }
        }
        
        /// <remarks/>
        public string Message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
        
        /// <remarks/>
        public string DetailedMessage {
            get {
                return this.detailedMessageField;
            }
            set {
                this.detailedMessageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.euromsg.com/report")]
    public partial class EmPushMessageReportResult : EmResult {
        
        private int unreadMessageCountField;
        
        private int readMessageCountField;
        
        private EmPushMessage[] pushReportListField;
        
        /// <remarks/>
        public int UnreadMessageCount {
            get {
                return this.unreadMessageCountField;
            }
            set {
                this.unreadMessageCountField = value;
            }
        }
        
        /// <remarks/>
        public int ReadMessageCount {
            get {
                return this.readMessageCountField;
            }
            set {
                this.readMessageCountField = value;
            }
        }
        
        /// <remarks/>
        public EmPushMessage[] pushReportList {
            get {
                return this.pushReportListField;
            }
            set {
                this.pushReportListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.euromsg.com/report")]
    public partial class EmOngoingEmailResult : EmResult {
        
        private string campIDField;
        
        private string transacitonIDField;
        
        private string relayStatusField;
        
        private string deliveryStatusField;
        
        private string readTimeField;
        
        private string undeliveryReasonField;
        
        private bool markedSpamField;
        
        /// <remarks/>
        public string CampID {
            get {
                return this.campIDField;
            }
            set {
                this.campIDField = value;
            }
        }
        
        /// <remarks/>
        public string TransacitonID {
            get {
                return this.transacitonIDField;
            }
            set {
                this.transacitonIDField = value;
            }
        }
        
        /// <remarks/>
        public string RelayStatus {
            get {
                return this.relayStatusField;
            }
            set {
                this.relayStatusField = value;
            }
        }
        
        /// <remarks/>
        public string DeliveryStatus {
            get {
                return this.deliveryStatusField;
            }
            set {
                this.deliveryStatusField = value;
            }
        }
        
        /// <remarks/>
        public string ReadTime {
            get {
                return this.readTimeField;
            }
            set {
                this.readTimeField = value;
            }
        }
        
        /// <remarks/>
        public string UndeliveryReason {
            get {
                return this.undeliveryReasonField;
            }
            set {
                this.undeliveryReasonField = value;
            }
        }
        
        /// <remarks/>
        public bool MarkedSpam {
            get {
                return this.markedSpamField;
            }
            set {
                this.markedSpamField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.euromsg.com/report")]
    public partial class EmReportResult : EmResult {
        
        private string conversationIDField;
        
        private string conversationStatusField;
        
        private int totalRowCountInConversationField;
        
        private int processedRowCountInConversationField;
        
        /// <remarks/>
        public string ConversationID {
            get {
                return this.conversationIDField;
            }
            set {
                this.conversationIDField = value;
            }
        }
        
        /// <remarks/>
        public string ConversationStatus {
            get {
                return this.conversationStatusField;
            }
            set {
                this.conversationStatusField = value;
            }
        }
        
        /// <remarks/>
        public int TotalRowCountInConversation {
            get {
                return this.totalRowCountInConversationField;
            }
            set {
                this.totalRowCountInConversationField = value;
            }
        }
        
        /// <remarks/>
        public int ProcessedRowCountInConversation {
            get {
                return this.processedRowCountInConversationField;
            }
            set {
                this.processedRowCountInConversationField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetListContentCompletedEventHandler(object sender, GetListContentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetListContentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetListContentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmReportResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmReportResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetCampaignReportWithCampIDCompletedEventHandler(object sender, GetCampaignReportWithCampIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCampaignReportWithCampIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCampaignReportWithCampIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmReportResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmReportResult)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public EmCampaignReportResult Campaign {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmCampaignReportResult)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetCampaignReportCompletedEventHandler(object sender, GetCampaignReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCampaignReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCampaignReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmReportResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmReportResult)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public EmCampaignReportResult[] Campaigns {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmCampaignReportResult[])(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetEmailCampaignLinksCompletedEventHandler(object sender, GetEmailCampaignLinksCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEmailCampaignLinksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEmailCampaignLinksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmReportResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmReportResult)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public CampaignLink[] Links {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CampaignLink[])(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetEmailCampaignDeliveryStatusReportViaFtpCompletedEventHandler(object sender, GetEmailCampaignDeliveryStatusReportViaFtpCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEmailCampaignDeliveryStatusReportViaFtpCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEmailCampaignDeliveryStatusReportViaFtpCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmReportResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmReportResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetEmailCampaignDeliveryStatusReportBetweenTwoDatesViaFtpCompletedEventHandler(object sender, GetEmailCampaignDeliveryStatusReportBetweenTwoDatesViaFtpCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEmailCampaignDeliveryStatusReportBetweenTwoDatesViaFtpCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEmailCampaignDeliveryStatusReportBetweenTwoDatesViaFtpCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmReportResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmReportResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetEmailCampaignMemberLinkReportViaFtpCompletedEventHandler(object sender, GetEmailCampaignMemberLinkReportViaFtpCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEmailCampaignMemberLinkReportViaFtpCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEmailCampaignMemberLinkReportViaFtpCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmReportResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmReportResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetEmailCampaignMemberLinkReportBetweenTwoDatesViaFtpCompletedEventHandler(object sender, GetEmailCampaignMemberLinkReportBetweenTwoDatesViaFtpCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEmailCampaignMemberLinkReportBetweenTwoDatesViaFtpCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEmailCampaignMemberLinkReportBetweenTwoDatesViaFtpCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmReportResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmReportResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetEmailUnsubscribeReportViaFtpCompletedEventHandler(object sender, GetEmailUnsubscribeReportViaFtpCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEmailUnsubscribeReportViaFtpCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEmailUnsubscribeReportViaFtpCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmReportResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmReportResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetEmailUnsubscribeReportBetweenTwoDatesViaFtpCompletedEventHandler(object sender, GetEmailUnsubscribeReportBetweenTwoDatesViaFtpCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEmailUnsubscribeReportBetweenTwoDatesViaFtpCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEmailUnsubscribeReportBetweenTwoDatesViaFtpCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmReportResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmReportResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetUnsubscribeReportBetweenTwoDatesCompletedEventHandler(object sender, GetUnsubscribeReportBetweenTwoDatesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUnsubscribeReportBetweenTwoDatesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUnsubscribeReportBetweenTwoDatesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmReportResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmReportResult)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public EmUnsubscriberDetails[] Unsubscribers {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmUnsubscriberDetails[])(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetSmsOptoutReportBetweenTwoDatesCompletedEventHandler(object sender, GetSmsOptoutReportBetweenTwoDatesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSmsOptoutReportBetweenTwoDatesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSmsOptoutReportBetweenTwoDatesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmReportResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmReportResult)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public EmSmsOptoutList[] Unsubscribers {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmSmsOptoutList[])(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetFilteredMembersCompletedEventHandler(object sender, GetFilteredMembersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFilteredMembersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFilteredMembersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmReportResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmReportResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void QueryBulkFileProgressCompletedEventHandler(object sender, QueryBulkFileProgressCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryBulkFileProgressCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryBulkFileProgressCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmReportResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmReportResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void RetryExportJobCompletedEventHandler(object sender, RetryExportJobCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetryExportJobCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RetryExportJobCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmReportResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmReportResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void QueryOngoingEmailStatusCompletedEventHandler(object sender, QueryOngoingEmailStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryOngoingEmailStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryOngoingEmailStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmOngoingEmailResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmOngoingEmailResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void QueryOngoingSmsStatusCompletedEventHandler(object sender, QueryOngoingSmsStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryOngoingSmsStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryOngoingSmsStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmResult)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public EmSmsDeliveryResult DeliveryResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmSmsDeliveryResult)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetIncomingSmsMessagesCompletedEventHandler(object sender, GetIncomingSmsMessagesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetIncomingSmsMessagesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetIncomingSmsMessagesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmReportResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmReportResult)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public EmSmsIncomingMessage[] SmsMessages {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmSmsIncomingMessage[])(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetSmsCampaignReportCompletedEventHandler(object sender, GetSmsCampaignReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSmsCampaignReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSmsCampaignReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmReportResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmReportResult)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public EmSmsCampaignReportResult[] Campaigns {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmSmsCampaignReportResult[])(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetSmsCampaignReportWithCampIDCompletedEventHandler(object sender, GetSmsCampaignReportWithCampIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSmsCampaignReportWithCampIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSmsCampaignReportWithCampIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmReportResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmReportResult)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public EmSmsCampaignReportResult SmsCampaign {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmSmsCampaignReportResult)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetSmsCampaignDeliveryStatusReportViaFtpCompletedEventHandler(object sender, GetSmsCampaignDeliveryStatusReportViaFtpCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSmsCampaignDeliveryStatusReportViaFtpCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSmsCampaignDeliveryStatusReportViaFtpCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmReportResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmReportResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetSmsCampaignDeliveryStatusReportBetweenTwoDatesViaFtpCompletedEventHandler(object sender, GetSmsCampaignDeliveryStatusReportBetweenTwoDatesViaFtpCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSmsCampaignDeliveryStatusReportBetweenTwoDatesViaFtpCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSmsCampaignDeliveryStatusReportBetweenTwoDatesViaFtpCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmReportResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmReportResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void QuerySendingPushMessageToMembersCompletedEventHandler(object sender, QuerySendingPushMessageToMembersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QuerySendingPushMessageToMembersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QuerySendingPushMessageToMembersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmPushMessageReportResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmPushMessageReportResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void QueryDataWarehouseUploadProgressCompletedEventHandler(object sender, QueryDataWarehouseUploadProgressCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryDataWarehouseUploadProgressCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryDataWarehouseUploadProgressCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmReportResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmReportResult)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public EmDWTableReport[] DWTables {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmDWTableReport[])(this.results[1]));
            }
        }
    }
}

#pragma warning restore 1591