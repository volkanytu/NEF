//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace NEF.ConsoleApp.SendMarketingList.sendlist.live {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="SendListSoap", Namespace="http://ws.euromsg.com/sendlist")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(EmResult))]
    public partial class SendList : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback QuerySendListMemberCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateSendListOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveSendListOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddBulkOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddBulkFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveBulkFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback QuerySendListsOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public SendList() {
            this.Url = global::NEF.ConsoleApp.SendMarketingList.Properties.Settings.Default.Nef_ConsoleApp_SendMarketingList_sendlist_live_SendList;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event QuerySendListMemberCountCompletedEventHandler QuerySendListMemberCountCompleted;
        
        /// <remarks/>
        public event CreateSendListCompletedEventHandler CreateSendListCompleted;
        
        /// <remarks/>
        public event RemoveSendListCompletedEventHandler RemoveSendListCompleted;
        
        /// <remarks/>
        public event AddBulkCompletedEventHandler AddBulkCompleted;
        
        /// <remarks/>
        public event AddBulkFileCompletedEventHandler AddBulkFileCompleted;
        
        /// <remarks/>
        public event RemoveBulkFileCompletedEventHandler RemoveBulkFileCompleted;
        
        /// <remarks/>
        public event QuerySendListsCompletedEventHandler QuerySendListsCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.euromsg.com/sendlist/QuerySendListMemberCount", RequestNamespace="http://ws.euromsg.com/sendlist", ResponseNamespace="http://ws.euromsg.com/sendlist", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmSendListResult QuerySendListMemberCount(string ServiceTicket, int ListID, out int MemberCount) {
            object[] results = this.Invoke("QuerySendListMemberCount", new object[] {
                        ServiceTicket,
                        ListID});
            MemberCount = ((int)(results[1]));
            return ((EmSendListResult)(results[0]));
        }
        
        /// <remarks/>
        public void QuerySendListMemberCountAsync(string ServiceTicket, int ListID) {
            this.QuerySendListMemberCountAsync(ServiceTicket, ListID, null);
        }
        
        /// <remarks/>
        public void QuerySendListMemberCountAsync(string ServiceTicket, int ListID, object userState) {
            if ((this.QuerySendListMemberCountOperationCompleted == null)) {
                this.QuerySendListMemberCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQuerySendListMemberCountOperationCompleted);
            }
            this.InvokeAsync("QuerySendListMemberCount", new object[] {
                        ServiceTicket,
                        ListID}, this.QuerySendListMemberCountOperationCompleted, userState);
        }
        
        private void OnQuerySendListMemberCountOperationCompleted(object arg) {
            if ((this.QuerySendListMemberCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QuerySendListMemberCountCompleted(this, new QuerySendListMemberCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.euromsg.com/sendlist/CreateSendList", RequestNamespace="http://ws.euromsg.com/sendlist", ResponseNamespace="http://ws.euromsg.com/sendlist", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmSendListResult CreateSendList(string ServiceTicket, string ListGroup, string ListName) {
            object[] results = this.Invoke("CreateSendList", new object[] {
                        ServiceTicket,
                        ListGroup,
                        ListName});
            return ((EmSendListResult)(results[0]));
        }
        
        /// <remarks/>
        public void CreateSendListAsync(string ServiceTicket, string ListGroup, string ListName) {
            this.CreateSendListAsync(ServiceTicket, ListGroup, ListName, null);
        }
        
        /// <remarks/>
        public void CreateSendListAsync(string ServiceTicket, string ListGroup, string ListName, object userState) {
            if ((this.CreateSendListOperationCompleted == null)) {
                this.CreateSendListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateSendListOperationCompleted);
            }
            this.InvokeAsync("CreateSendList", new object[] {
                        ServiceTicket,
                        ListGroup,
                        ListName}, this.CreateSendListOperationCompleted, userState);
        }
        
        private void OnCreateSendListOperationCompleted(object arg) {
            if ((this.CreateSendListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateSendListCompleted(this, new CreateSendListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.euromsg.com/sendlist/RemoveSendList", RequestNamespace="http://ws.euromsg.com/sendlist", ResponseNamespace="http://ws.euromsg.com/sendlist", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmSendListResult RemoveSendList(string ServiceTicket, string ListGroup, string ListName) {
            object[] results = this.Invoke("RemoveSendList", new object[] {
                        ServiceTicket,
                        ListGroup,
                        ListName});
            return ((EmSendListResult)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveSendListAsync(string ServiceTicket, string ListGroup, string ListName) {
            this.RemoveSendListAsync(ServiceTicket, ListGroup, ListName, null);
        }
        
        /// <remarks/>
        public void RemoveSendListAsync(string ServiceTicket, string ListGroup, string ListName, object userState) {
            if ((this.RemoveSendListOperationCompleted == null)) {
                this.RemoveSendListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveSendListOperationCompleted);
            }
            this.InvokeAsync("RemoveSendList", new object[] {
                        ServiceTicket,
                        ListGroup,
                        ListName}, this.RemoveSendListOperationCompleted, userState);
        }
        
        private void OnRemoveSendListOperationCompleted(object arg) {
            if ((this.RemoveSendListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveSendListCompleted(this, new RemoveSendListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.euromsg.com/sendlist/AddBulk", RequestNamespace="http://ws.euromsg.com/sendlist", ResponseNamespace="http://ws.euromsg.com/sendlist", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmSendListResult AddBulk(string ServiceTicket, string ListGroup, string ListName, string Key, [System.Xml.Serialization.XmlArrayItemAttribute("ArrayOfEmKeyValue")] [System.Xml.Serialization.XmlArrayItemAttribute(NestingLevel=1)] EmKeyValue[][] DemograficData, bool ForceInsert, out BulkDetailedResult[] DetailsResult) {
            object[] results = this.Invoke("AddBulk", new object[] {
                        ServiceTicket,
                        ListGroup,
                        ListName,
                        Key,
                        DemograficData,
                        ForceInsert});
            DetailsResult = ((BulkDetailedResult[])(results[1]));
            return ((EmSendListResult)(results[0]));
        }
        
        /// <remarks/>
        public void AddBulkAsync(string ServiceTicket, string ListGroup, string ListName, string Key, EmKeyValue[][] DemograficData, bool ForceInsert) {
            this.AddBulkAsync(ServiceTicket, ListGroup, ListName, Key, DemograficData, ForceInsert, null);
        }
        
        /// <remarks/>
        public void AddBulkAsync(string ServiceTicket, string ListGroup, string ListName, string Key, EmKeyValue[][] DemograficData, bool ForceInsert, object userState) {
            if ((this.AddBulkOperationCompleted == null)) {
                this.AddBulkOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddBulkOperationCompleted);
            }
            this.InvokeAsync("AddBulk", new object[] {
                        ServiceTicket,
                        ListGroup,
                        ListName,
                        Key,
                        DemograficData,
                        ForceInsert}, this.AddBulkOperationCompleted, userState);
        }
        
        private void OnAddBulkOperationCompleted(object arg) {
            if ((this.AddBulkCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddBulkCompleted(this, new AddBulkCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.euromsg.com/sendlist/AddBulkFile", RequestNamespace="http://ws.euromsg.com/sendlist", ResponseNamespace="http://ws.euromsg.com/sendlist", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmSendListResult AddBulkFile(string ServiceTicket, string ListGroup, string ListName, string Key, string Map, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] File, string FileType, string NotificationEmail) {
            object[] results = this.Invoke("AddBulkFile", new object[] {
                        ServiceTicket,
                        ListGroup,
                        ListName,
                        Key,
                        Map,
                        File,
                        FileType,
                        NotificationEmail});
            return ((EmSendListResult)(results[0]));
        }
        
        /// <remarks/>
        public void AddBulkFileAsync(string ServiceTicket, string ListGroup, string ListName, string Key, string Map, byte[] File, string FileType, string NotificationEmail) {
            this.AddBulkFileAsync(ServiceTicket, ListGroup, ListName, Key, Map, File, FileType, NotificationEmail, null);
        }
        
        /// <remarks/>
        public void AddBulkFileAsync(string ServiceTicket, string ListGroup, string ListName, string Key, string Map, byte[] File, string FileType, string NotificationEmail, object userState) {
            if ((this.AddBulkFileOperationCompleted == null)) {
                this.AddBulkFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddBulkFileOperationCompleted);
            }
            this.InvokeAsync("AddBulkFile", new object[] {
                        ServiceTicket,
                        ListGroup,
                        ListName,
                        Key,
                        Map,
                        File,
                        FileType,
                        NotificationEmail}, this.AddBulkFileOperationCompleted, userState);
        }
        
        private void OnAddBulkFileOperationCompleted(object arg) {
            if ((this.AddBulkFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddBulkFileCompleted(this, new AddBulkFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.euromsg.com/sendlist/RemoveBulkFile", RequestNamespace="http://ws.euromsg.com/sendlist", ResponseNamespace="http://ws.euromsg.com/sendlist", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmSendListResult RemoveBulkFile(string ServiceTicket, string ListGroup, string ListName, string Key, string Map, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] File, string FileType, string NotificationEmail, bool DeleteIfInNoList) {
            object[] results = this.Invoke("RemoveBulkFile", new object[] {
                        ServiceTicket,
                        ListGroup,
                        ListName,
                        Key,
                        Map,
                        File,
                        FileType,
                        NotificationEmail,
                        DeleteIfInNoList});
            return ((EmSendListResult)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveBulkFileAsync(string ServiceTicket, string ListGroup, string ListName, string Key, string Map, byte[] File, string FileType, string NotificationEmail, bool DeleteIfInNoList) {
            this.RemoveBulkFileAsync(ServiceTicket, ListGroup, ListName, Key, Map, File, FileType, NotificationEmail, DeleteIfInNoList, null);
        }
        
        /// <remarks/>
        public void RemoveBulkFileAsync(string ServiceTicket, string ListGroup, string ListName, string Key, string Map, byte[] File, string FileType, string NotificationEmail, bool DeleteIfInNoList, object userState) {
            if ((this.RemoveBulkFileOperationCompleted == null)) {
                this.RemoveBulkFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveBulkFileOperationCompleted);
            }
            this.InvokeAsync("RemoveBulkFile", new object[] {
                        ServiceTicket,
                        ListGroup,
                        ListName,
                        Key,
                        Map,
                        File,
                        FileType,
                        NotificationEmail,
                        DeleteIfInNoList}, this.RemoveBulkFileOperationCompleted, userState);
        }
        
        private void OnRemoveBulkFileOperationCompleted(object arg) {
            if ((this.RemoveBulkFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveBulkFileCompleted(this, new RemoveBulkFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.euromsg.com/sendlist/QuerySendLists", RequestNamespace="http://ws.euromsg.com/sendlist", ResponseNamespace="http://ws.euromsg.com/sendlist", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmQuerySendListResult QuerySendLists(string ServiceTicket) {
            object[] results = this.Invoke("QuerySendLists", new object[] {
                        ServiceTicket});
            return ((EmQuerySendListResult)(results[0]));
        }
        
        /// <remarks/>
        public void QuerySendListsAsync(string ServiceTicket) {
            this.QuerySendListsAsync(ServiceTicket, null);
        }
        
        /// <remarks/>
        public void QuerySendListsAsync(string ServiceTicket, object userState) {
            if ((this.QuerySendListsOperationCompleted == null)) {
                this.QuerySendListsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQuerySendListsOperationCompleted);
            }
            this.InvokeAsync("QuerySendLists", new object[] {
                        ServiceTicket}, this.QuerySendListsOperationCompleted, userState);
        }
        
        private void OnQuerySendListsOperationCompleted(object arg) {
            if ((this.QuerySendListsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QuerySendListsCompleted(this, new QuerySendListsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.euromsg.com/sendlist")]
    public partial class EmSendListResult : EmResult {
        
        private string conversationIDField;
        
        private int createdListIDField;
        
        /// <remarks/>
        public string ConversationID {
            get {
                return this.conversationIDField;
            }
            set {
                this.conversationIDField = value;
            }
        }
        
        /// <remarks/>
        public int CreatedListID {
            get {
                return this.createdListIDField;
            }
            set {
                this.createdListIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(EmQuerySendListResult))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(EmSendListResult))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.euromsg.com/sendlist")]
    public partial class EmResult {
        
        private string codeField;
        
        private string messageField;
        
        private string detailedMessageField;
        
        /// <remarks/>
        public string Code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
            }
        }
        
        /// <remarks/>
        public string Message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
        
        /// <remarks/>
        public string DetailedMessage {
            get {
                return this.detailedMessageField;
            }
            set {
                this.detailedMessageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.euromsg.com/sendlist")]
    public partial class BulkDetailedResult {
        
        private string keyField;
        
        private string codeField;
        
        private string messageField;
        
        private string detailedMessageField;
        
        /// <remarks/>
        public string Key {
            get {
                return this.keyField;
            }
            set {
                this.keyField = value;
            }
        }
        
        /// <remarks/>
        public string Code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
            }
        }
        
        /// <remarks/>
        public string Message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
        
        /// <remarks/>
        public string DetailedMessage {
            get {
                return this.detailedMessageField;
            }
            set {
                this.detailedMessageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.euromsg.com/sendlist")]
    public partial class EmKeyValue {
        
        private string keyField;
        
        private string valueField;
        
        /// <remarks/>
        public string Key {
            get {
                return this.keyField;
            }
            set {
                this.keyField = value;
            }
        }
        
        /// <remarks/>
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.euromsg.com/sendlist")]
    public partial class EmSendListResponse {
        
        private string listIdField;
        
        private string listNameField;
        
        private string groupNameField;
        
        /// <remarks/>
        public string ListId {
            get {
                return this.listIdField;
            }
            set {
                this.listIdField = value;
            }
        }
        
        /// <remarks/>
        public string ListName {
            get {
                return this.listNameField;
            }
            set {
                this.listNameField = value;
            }
        }
        
        /// <remarks/>
        public string GroupName {
            get {
                return this.groupNameField;
            }
            set {
                this.groupNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.euromsg.com/sendlist")]
    public partial class EmQuerySendListResult : EmResult {
        
        private EmSendListResponse[] sendListsField;
        
        /// <remarks/>
        public EmSendListResponse[] SendLists {
            get {
                return this.sendListsField;
            }
            set {
                this.sendListsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void QuerySendListMemberCountCompletedEventHandler(object sender, QuerySendListMemberCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QuerySendListMemberCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QuerySendListMemberCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmSendListResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmSendListResult)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int MemberCount {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void CreateSendListCompletedEventHandler(object sender, CreateSendListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateSendListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateSendListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmSendListResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmSendListResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void RemoveSendListCompletedEventHandler(object sender, RemoveSendListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveSendListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveSendListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmSendListResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmSendListResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void AddBulkCompletedEventHandler(object sender, AddBulkCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddBulkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddBulkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmSendListResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmSendListResult)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public BulkDetailedResult[] DetailsResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BulkDetailedResult[])(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void AddBulkFileCompletedEventHandler(object sender, AddBulkFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddBulkFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddBulkFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmSendListResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmSendListResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void RemoveBulkFileCompletedEventHandler(object sender, RemoveBulkFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveBulkFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveBulkFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmSendListResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmSendListResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void QuerySendListsCompletedEventHandler(object sender, QuerySendListsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QuerySendListsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QuerySendListsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmQuerySendListResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmQuerySendListResult)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591